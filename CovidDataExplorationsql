/* COVID 19 Data Exploration
Skills used: Joins, CTE's, Temp Tables, Windows Functions, Aggregate Functions, Creating Views, Converting Data Types */

SELECT *
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
ORDER BY [location],date


-- Selecting data that I am going to be using

SELECT [location],[date],total_cases,new_cases,total_deaths, population
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
ORDER BY [location],[date]

-- Total Cases vs. Total Deaths
-- Shows the likelihood of dying if you were to get COVID in your country
-- in order to show the decimal values, I had to do (column1 * (1.0/column2))

SELECT [location],[date],total_cases,total_deaths, 
(total_deaths*(1.0/total_cases))*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE[location] = 'United States'
AND continent is not null
ORDER BY [location],[date]

-- creating a view
CREATE VIEW CasesVsDeaths AS
SELECT [location],[date],total_cases,total_deaths, 
(total_deaths*(1.0/total_cases))*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE[location] = 'United States'
AND continent is not null



-- Total Cases vs. Population
-- Shows what percentage of population got COVID

SELECT [location],date,total_cases,population, 
(total_cases*(1.0/population))*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
-- WHERE [location]= 'United States' 
WHERE continent is not null
ORDER BY [location],[date]


-- Countries with Highest Infection Rate compared to Population

SELECT [location], MAX(total_cases) as HighestInfectionCount,population,
MAX(total_cases*(1.0/population))*100 as PercentPopulationInfected
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY [location],population
ORDER BY PercentPopulationInfected DESC


-- Countries with Highest Death Count per Populaiton

SELECT [location], MAX(total_deaths) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY [location]
ORDER BY TotalDeathCount DESC

-- BREAKING THINGS DOWN BY CONTINENT
-- Continents with Highest Death Count per Populaiton

SELECT continent, MAX(total_deaths) as TotalDeathCount
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY continent
ORDER BY TotalDeathCount DESC


-- GLOBAL NUMBERS

SELECT [date],SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths,(SUM(new_deaths)* 1.0/SUM(new_cases))*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY [date]
ORDER BY [date]



-- creating view for global numbers
CREATE VIEW GlobalNumbers AS
SELECT [date],SUM(new_cases) as TotalCases, SUM(new_deaths) as TotalDeaths,(SUM(new_deaths)* 1.0/SUM(new_cases))*100 as DeathPercentage
FROM PortfolioProject..CovidDeaths
WHERE continent is not null
GROUP BY [date]



-- Total Population vs Vaccinations

SELECT dea.continent, dea.[location],dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location,dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths as dea
JOIN PortfolioProject..CovidVaccinations as vac
   ON dea.[location] = vac.[location]
   AND dea.[date] = vac.[date]
WHERE dea.continent is not null
ORDER BY [location],[date]

-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac (continent, location, date, population,new_vaccinations,RollingPeopleVaccinated )
 AS
 (
SELECT dea.continent, dea.[location],dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location,dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths as dea
JOIN PortfolioProject..CovidVaccinations as vac
   ON dea.[location] = vac.[location]
   AND dea.[date] = vac.[date]
WHERE dea.continent is not null
--ORDER BY [location],[date]
 )
 SELECT *, (RollingPeopleVaccinated* 1.0/population)*100
 FROM PopvsVac
 ORDER BY [location],[date]

 -- Using Temp Table to perform Calculation on Partition By in previous query


DROP Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

INSERT INTO #PercentPopulationVaccinated

SELECT dea.continent, dea.[location],dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location,dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths as dea
JOIN PortfolioProject..CovidVaccinations as vac
   ON dea.[location] = vac.[location]
   AND dea.[date] = vac.[date]
-- WHERE dea.continent is not null
-- ORDER BY [location],[date]

 SELECT *, (RollingPeopleVaccinated* 1.0/population)*100
 FROM #PercentPopulationVaccinated
 ORDER BY [location],[date]


 -- Creating view to store data for later visualizations
 
 CREATE VIEW PercentPopulationVaccinated AS
 SELECT dea.continent, dea.[location],dea.date, dea.population, vac.new_vaccinations,
SUM(vac.new_vaccinations) OVER (PARTITION BY dea.location ORDER BY dea.location,dea.date) as RollingPeopleVaccinated
FROM PortfolioProject..CovidDeaths as dea
JOIN PortfolioProject..CovidVaccinations as vac
   ON dea.[location] = vac.[location]
   AND dea.[date] = vac.[date]
WHERE dea.continent is not null
-- ORDER BY [location],[date]